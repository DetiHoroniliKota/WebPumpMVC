// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebPumpMVC.Data;

#nullable disable

namespace WebPumpMVC.Migrations
{
    [DbContext(typeof(WebPumpMVCContext))]
    [Migration("20230503120331_FixModel03.05.2023")]
    partial class FixModel03052023
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebPumpMVC.Models.Automation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Automation", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.Cap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cap", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.Clamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Diameter")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clamp", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.HydraulicAccumulator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HydraulicAccumulator", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("WebPumpMVC.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AutomationId")
                        .HasColumnType("int");

                    b.Property<string>("AutomationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capid")
                        .HasColumnType("int");

                    b.Property<int>("ClampId")
                        .HasColumnType("int");

                    b.Property<string>("ClampTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HydraulicAccumulatorId")
                        .HasColumnType("int");

                    b.Property<string>("HydraulicAccumulatorTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PipeId")
                        .HasColumnType("int");

                    b.Property<string>("PipeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PumpId")
                        .HasColumnType("int");

                    b.Property<string>("PumpsTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RopeId")
                        .HasColumnType("int");

                    b.Property<string>("RopeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnderwaterСableId")
                        .HasColumnType("int");

                    b.Property<string>("UnderwaterСableTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutomationId")
                        .IsUnique();

                    b.HasIndex("Capid")
                        .IsUnique();

                    b.HasIndex("ClampId")
                        .IsUnique();

                    b.HasIndex("HydraulicAccumulatorId")
                        .IsUnique();

                    b.HasIndex("PipeId")
                        .IsUnique();

                    b.HasIndex("PumpId")
                        .IsUnique();

                    b.HasIndex("RopeId")
                        .IsUnique();

                    b.HasIndex("UnderwaterСableId")
                        .IsUnique();

                    b.ToTable("Equipment", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.Pipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Diameter")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pipe", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.Pump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("H")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Q")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pump", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.Rope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Diameter")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rope", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.UnderwaterСable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Section")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnderwaterСable", (string)null);
                });

            modelBuilder.Entity("WebPumpMVC.Models.Order", b =>
                {
                    b.HasOne("WebPumpMVC.Models.Automation", "Automation")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "AutomationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPumpMVC.Models.Cap", "Cap")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "Capid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPumpMVC.Models.Clamp", "Clamp")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "ClampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPumpMVC.Models.HydraulicAccumulator", "HydraulicAccumulator")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "HydraulicAccumulatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPumpMVC.Models.Pipe", "Pipe")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "PipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPumpMVC.Models.Pump", "Pump")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "PumpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPumpMVC.Models.Rope", "Rope")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "RopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPumpMVC.Models.UnderwaterСable", "UnderwaterСable")
                        .WithOne("Order")
                        .HasForeignKey("WebPumpMVC.Models.Order", "UnderwaterСableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automation");

                    b.Navigation("Cap");

                    b.Navigation("Clamp");

                    b.Navigation("HydraulicAccumulator");

                    b.Navigation("Pipe");

                    b.Navigation("Pump");

                    b.Navigation("Rope");

                    b.Navigation("UnderwaterСable");
                });

            modelBuilder.Entity("WebPumpMVC.Models.Automation", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebPumpMVC.Models.Cap", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebPumpMVC.Models.Clamp", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebPumpMVC.Models.HydraulicAccumulator", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebPumpMVC.Models.Pipe", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebPumpMVC.Models.Pump", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebPumpMVC.Models.Rope", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebPumpMVC.Models.UnderwaterСable", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
